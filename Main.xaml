<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Allows the Orchestrator queue name to be passed as an argument, instead of only being defined in the configuration file." Name="in_OrchestratorQueueName" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>859.2,1046.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Main2_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="35">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Credentials.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="33">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Credentials.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <StateMachine InitialState="{x:Reference __ReferenceID3}" sap2010:Annotation.AnnotationText="[Extraer información de la TRM del Euro y del Dolar de la página del Banco de la República para un rango de fechas específico]&#xA;[Este programa descarga archivos CSV con información de la TRM para el Euro y el Dolar. Posteriormente procesa los datos para obtener los promedios, el valor mayor y el valor menor de la TRM para cada moneda en cada año, para un rango de fechas escogido por el ususario. Finalmente envía un reporte por correo electronico en un archivo de Excel.]&#xA;[Autor: Gabriela Franco - Reto Proceso 2NV. Necesita tener instalado Google Chrome en su máquina y tener configurada la opción del explorador para preguntar ruta de almacenamiento cada vez que se ejecuta una descarga. Este programa no acepta colas de trabajo.]" DisplayName="General Business Process" sap:VirtualizedContainerService.HintSize="687.2,981.6" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">60,22.4</av:Point>
        <x:Double x:Key="StateContainerWidth">653.33333333333337</x:Double>
        <x:Double x:Key="StateContainerHeight">804.8</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">120,60 150,60 150,67.4666666666667 223,67.4666666666667</av:PointCollection>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <State x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="Obtener la siguiente transacción (fila) a ser procesada." DisplayName="Get Transaction Data" sap:VirtualizedContainerService.HintSize="250.4,114.4" sap2010:WorkflowViewState.IdRef="State_4">
      <State.Entry>
        <Sequence sap2010:Annotation.AnnotationText="Retrieve a new transaction data to be processed.&#xA;The TransactionNumber variable holds the current transaction number and incrementing this variable makes the framework retrieve the next transaction. If the framework is retrying a failed transaction, this variable is not incremented until the maximum number of retry attempts is reached." DisplayName="Retrieve Data" sap:VirtualizedContainerService.HintSize="622.4,1447.2" sap2010:WorkflowViewState.IdRef="Sequence_25">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Boolean" Name="ShouldStop" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[ShouldStop]" DisplayName="Should Stop or Get Next" sap:VirtualizedContainerService.HintSize="580.8,1278.4" sap2010:WorkflowViewState.IdRef="If_11">
            <If.Else>
              <TryCatch DisplayName="Try GetTransactionData" sap:VirtualizedContainerService.HintSize="436.8,1128.8" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <Sequence sap:VirtualizedContainerService.HintSize="375.2,306.4" sap2010:WorkflowViewState.IdRef="Sequence_29">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                      <Assign.To>
                        <OutArgument x:TypeArguments="sd:DataRow">[CurrentTransactionRow]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="sd:DataRow">[TRMEuroDolarDT.Rows(TransactionNumber)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetTransactionData workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="Framework\GetTransactionData.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_TransactionNumber">[TransactionNumber]</InArgument>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionField1">[TransactionField1]</OutArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionField2">[TransactionField2]</OutArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionID">[TransactionID]</OutArgument>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_TransactionData">[TRMEuroDolarDT]</InOutArgument>
                        <OutArgument x:TypeArguments="x:Int32" x:Key="out_AñoActual">[AñoActual]</OutArgument>
                        <OutArgument x:TypeArguments="x:Double" x:Key="out_TRMDolarActual">[TRMDolarActual]</OutArgument>
                        <OutArgument x:TypeArguments="x:Double" x:Key="out_TRMEuroActual">[TRMEuroActual]</OutArgument>
                        <OutArgument x:TypeArguments="x:Int32" x:Key="out_FechaTRM">[FechaTRMActual]</OutArgument>
                        <InOutArgument x:TypeArguments="x:Int32" x:Key="io_AñoAnterior">[AñoAnterior]</InOutArgument>
                        <InOutArgument x:TypeArguments="x:Int32" x:Key="io_NumDatos">[NumDatos]</InOutArgument>
                        <InOutArgument x:TypeArguments="x:Double" x:Key="io_SumaPromDolar">[SumaPromDolar]</InOutArgument>
                        <InOutArgument x:TypeArguments="x:Double" x:Key="io_SumaPromEuro">[SumaPromEuro]</InOutArgument>
                        <InOutArgument x:TypeArguments="x:Double" x:Key="io_MenorEuro">[MenorEuro]</InOutArgument>
                        <InOutArgument x:TypeArguments="x:Double" x:Key="io_MayorEuro">[MayorEuro]</InOutArgument>
                        <InOutArgument x:TypeArguments="x:Double" x:Key="io_MenorDolar">[MenorDolar]</InOutArgument>
                        <InOutArgument x:TypeArguments="x:Double" x:Key="io_MayorDolar">[MayorDolar]</InOutArgument>
                        <InOutArgument x:TypeArguments="x:Int32" x:Key="io_MesMinDolar">[MesMinDolar]</InOutArgument>
                        <InOutArgument x:TypeArguments="x:Int32" x:Key="io_MesMinEuro">[MesMinEuro]</InOutArgument>
                        <InOutArgument x:TypeArguments="x:Int32" x:Key="io_MesMaxDolar">[MesMaxDolar]</InOutArgument>
                        <InOutArgument x:TypeArguments="x:Int32" x:Key="io_MesMaxEuro">[MesMaxEuro]</InOutArgument>
                        <InOutArgument x:TypeArguments="x:Double" x:Key="io_SumaPromDolarTotal">[SumaPromDolarTotal]</InOutArgument>
                        <InOutArgument x:TypeArguments="x:Double" x:Key="io_SumaPromEuroTotal">[SumaPromEuroTotal]</InOutArgument>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_ResultadosDT">[ResultadosDT]</InOutArgument>
                        <InArgument x:TypeArguments="sd:DataRow" x:Key="in_CurrentTransactionRow">[CurrentTransactionRow]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,509.6" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Log exception message and end process" sap:VirtualizedContainerService.HintSize="375.2,439.2" sap2010:WorkflowViewState.IdRef="Sequence_24">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log message  (Get transaction data error)" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Fatal" Message="[Config(&quot;LogMessage_GetTransactionDataError&quot;).ToString+TransactionNumber.ToString+&quot;. &quot;+Exception.Message+&quot; at Source: &quot;+Exception.Source]" />
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_37" UnSafe="False" WorkflowFileName="Logs_Generation.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Msg">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;LogMessage_GetTransactionDataError&quot;).ToString+TransactionNumber.ToString+&quot;. &quot;+Exception.Message+&quot; Fuente: &quot;+Exception.Source" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Proceso">
                              <Literal x:TypeArguments="x:String">Obtener datos de la Transacción</Literal>
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_TipoLog">
                              <Literal x:TypeArguments="x:String">Error</Literal>
                            </InArgument>
                            <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_LogsDT">
                              <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="LogsDT" />
                            </InOutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaHoraInicioCorrida">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="FechaHoraInicioCorrida" />
                            </InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <Assign DisplayName="End Process (Could not get new transaction)" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataRow">[CurrentTransactionRow]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataRow">[Nothing]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </If.Else>
          </If>
        </Sequence>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">214.8,252.8</av:Point>
          <av:Size x:Key="ShapeSize">250.4,114.4</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">217</x:Double>
          <x:Double x:Key="StateContainerHeight">34</x:Double>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State.Transitions>
        <Transition DisplayName="New Transaction" sap:VirtualizedContainerService.HintSize="475.2,1031.2" sap2010:WorkflowViewState.IdRef="Transition_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">340,367.2 340,397.2 330,397.2 330,572.8</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <State x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="Procesar una transacción.&#xD;&#xA;En caso de una excepción del sistema se reintenta el proceso." DisplayName="Process Transaction" sap:VirtualizedContainerService.HintSize="230.4,130.4" sap2010:WorkflowViewState.IdRef="State_3">
              <State.Entry>
                <TryCatch DisplayName="Try to process transaction" sap:VirtualizedContainerService.HintSize="473.6,1656.8" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch.Try>
                    <Sequence DisplayName="Process the current TransactionItem" sap:VirtualizedContainerService.HintSize="375.2,306.4" sap2010:WorkflowViewState.IdRef="Sequence_28">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Assign BusinessException" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                        <Assign.To>
                          <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessException]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="ui:BusinessRuleException">[Nothing]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Process workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="Process.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                          <InArgument x:TypeArguments="x:Int32" x:Key="in_AñoActual">[AñoActual]</InArgument>
                          <InArgument x:TypeArguments="x:Double" x:Key="in_TRMEuroActual">[TRMEuroActual]</InArgument>
                          <InArgument x:TypeArguments="x:Double" x:Key="in_TRMDolarActual">[TRMDolarActual]</InArgument>
                          <InArgument x:TypeArguments="x:Int32" x:Key="in_FechaActual">[FechaTRMActual]</InArgument>
                          <InOutArgument x:TypeArguments="x:Int32" x:Key="io_AñoAnterior">[AñoAnterior]</InOutArgument>
                          <InOutArgument x:TypeArguments="x:Int32" x:Key="io_NumDatos">[NumDatos]</InOutArgument>
                          <InOutArgument x:TypeArguments="x:Double" x:Key="io_SumaPromDolar">[SumaPromDolar]</InOutArgument>
                          <InOutArgument x:TypeArguments="x:Double" x:Key="io_SumaPromEuro">[SumaPromEuro]</InOutArgument>
                          <InOutArgument x:TypeArguments="x:Double" x:Key="io_MenorEuro">[MenorEuro]</InOutArgument>
                          <InOutArgument x:TypeArguments="x:Double" x:Key="io_MayorEuro">[MayorEuro]</InOutArgument>
                          <InOutArgument x:TypeArguments="x:Double" x:Key="io_MenorDolar">[MenorDolar]</InOutArgument>
                          <InOutArgument x:TypeArguments="x:Double" x:Key="io_MayorDolar">[MayorDolar]</InOutArgument>
                          <InOutArgument x:TypeArguments="x:Int32" x:Key="io_MesMinDolar">[MesMinDolar]</InOutArgument>
                          <InOutArgument x:TypeArguments="x:Int32" x:Key="io_MesMinEuro">[MesMinEuro]</InOutArgument>
                          <InOutArgument x:TypeArguments="x:Int32" x:Key="io_MesMaxDolar">[MesMaxDolar]</InOutArgument>
                          <InOutArgument x:TypeArguments="x:Int32" x:Key="io_MesMaxEuro">[MesMaxEuro]</InOutArgument>
                          <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">[TransactionNumber]</InOutArgument>
                          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_ResultadosDT">[ResultadosDT]</InOutArgument>
                          <InOutArgument x:TypeArguments="x:Double" x:Key="io_SumaPromDolarTotal">[SumaPromDolarTotal]</InOutArgument>
                          <InOutArgument x:TypeArguments="x:Double" x:Key="io_SumaPromEuroTotal">[SumaPromEuroTotal]</InOutArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:Int32, x:String)" x:Key="in_DiccionarioMeses">[New Dictionary(of integer, String) From { {1,"Enero"}, {2,"Febrero"}, {3,"Marzo"}, {4,"Abril"},{5,"Mayo"}, {6,"Junio"}, {7,"Julio"},{8,"Agosto"},{9,"Septiembre"},{10,"Octubre"},{11,"Noviembre"},{12,"Diciembre"}}]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="440,130.4" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="Exception" />
                        </ActivityAction.Argument>
                        <Assign DisplayName="Set transaction status to BusinessRuleException" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                          <Assign.To>
                            <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessException]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="ui:BusinessRuleException">[Exception]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </ActivityAction>
                    </Catch>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="440,130.4" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                        </ActivityAction.Argument>
                        <Assign DisplayName="Set transaction status to SystemException" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:Exception">[SystemException]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:Exception">[Exception]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                  <TryCatch.Finally>
                    <TryCatch DisplayName="Set the transaction status and move to process the next transaction" sap:VirtualizedContainerService.HintSize="436.8,836" sap2010:WorkflowViewState.IdRef="TryCatch_8">
                      <TryCatch.Try>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SetTransactionStatus workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="Framework\SetTransactionStatus.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                              <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Config" />
                            </InArgument>
                            <InOutArgument x:TypeArguments="x:Int32" x:Key="io_RetryNumber">
                              <mva:VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="RetryNumber" />
                            </InOutArgument>
                            <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">
                              <mva:VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="TransactionNumber" />
                            </InOutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField1">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="TransactionField1" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField2">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="TransactionField2" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_TransactionID">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="TransactionID" />
                            </InArgument>
                            <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemException">
                              <mva:VisualBasicValue x:TypeArguments="s:Exception" ExpressionText="SystemException" />
                            </InArgument>
                            <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_BusinessException">
                              <mva:VisualBasicValue x:TypeArguments="ui:BusinessRuleException" ExpressionText="BusinessException" />
                            </InArgument>
                            <InArgument x:TypeArguments="sd:DataTable" x:Key="in_TransactionData">
                              <mva:VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="TRMEuroDolarDT" />
                            </InArgument>
                            <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_logsDT">
                              <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="LogsDT" />
                            </InOutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_fechaHoraInicioCorrida">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="FechaHoraInicioCorrida" />
                            </InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,409.6" sap2010:WorkflowViewState.IdRef="Catch`1_11">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <Sequence sap:VirtualizedContainerService.HintSize="375.2,339.2" sap2010:WorkflowViewState.IdRef="Sequence_39">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log message (Failed to set transaction status)" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_32" Level="Fatal" Message="[&quot;SetTransactionStatus.xaml failed: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_34" UnSafe="False" WorkflowFileName="Logs_Generation.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_Msg">
                                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;Archivo SetTransactionStatus.xaml falló: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_Proceso">
                                    <Literal x:TypeArguments="x:String">Procesamiento de transacción</Literal>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_TipoLog">
                                    <Literal x:TypeArguments="x:String">Error</Literal>
                                  </InArgument>
                                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_LogsDT">
                                    <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="LogsDT" />
                                  </InOutArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_FechaHoraInicioCorrida">
                                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="FechaHoraInicioCorrida" />
                                  </InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </Sequence>
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                    </TryCatch>
                  </TryCatch.Finally>
                </TryCatch>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">214.8,572.8</av:Point>
                  <av:Size x:Key="ShapeSize">230.4,130.4</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">197</x:Double>
                  <x:Double x:Key="StateContainerHeight">34</x:Double>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <State.Transitions>
                <Transition DisplayName="System Exception" sap:VirtualizedContainerService.HintSize="448.8,509.6" sap2010:WorkflowViewState.IdRef="Transition_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">283.92,703.2 283.92,733.2 506.6,733.2 506.6,73.5466666666667 476.6,73.5466666666667</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">23</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">40</x:Int32>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.Condition>
                    <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="SystemException IsNot Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_4" />
                  </Transition.Condition>
                  <Transition.To>
                    <State x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="Leer el archivo de configuración, iniciar aplicaciones y filtrar datos descargados de la página de BanRep." DisplayName="Initialization" sap:VirtualizedContainerService.HintSize="828,5320.8" sap2010:WorkflowViewState.IdRef="State_2">
                      <State.Entry>
                        <TryCatch DisplayName="Try initializing settings and applications" sap:VirtualizedContainerService.HintSize="783.2,4900.8" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch.Try>
                            <Sequence DisplayName="Load configurations and open applications" sap:VirtualizedContainerService.HintSize="746.4,3749.6" sap2010:WorkflowViewState.IdRef="Sequence_4">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:Boolean" Name="EsExitoso" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="704.8,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[FechaHoraInicioCorrida]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[Now.ToString.Replace("/","-").Replace(":",".")]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="704.8,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_38" UnSafe="False" WorkflowFileName="Logs_Generation.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_Msg">
                                    <Literal x:TypeArguments="x:String">Inicializando el proceso</Literal>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_Proceso">
                                    <Literal x:TypeArguments="x:String">Inicialización</Literal>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_TipoLog">
                                    <Literal x:TypeArguments="x:String">Información</Literal>
                                  </InArgument>
                                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_LogsDT">
                                    <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="LogsDT" />
                                  </InOutArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_FechaHoraInicioCorrida">
                                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="FechaHoraInicioCorrida" />
                                  </InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <Assign DisplayName="Assign SystemException (initialization)" sap:VirtualizedContainerService.HintSize="704.8,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:Exception">[SystemException]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If sap2010:Annotation.AnnotationText="An uninitialized Config dictionary indicates that it is the first run of the process." Condition="[Config is Nothing]" DisplayName="If first run, read local configuration file" sap:VirtualizedContainerService.HintSize="704.8,2849.6" sap2010:WorkflowViewState.IdRef="If_1">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence DisplayName="First run" sap:VirtualizedContainerService.HintSize="560.8,2668.8" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="x:String" Name="RutaConfig" />
                                      <Variable x:TypeArguments="x:Boolean" Name="ArchivosRecibidosExist" />
                                      <Variable x:TypeArguments="x:Boolean" Name="TrazabilidadFolderExist" />
                                      <Variable x:TypeArguments="x:Boolean" Name="LogFolderExist" />
                                      <Variable x:TypeArguments="x:Boolean" Name="ConfigFileExists" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:GetRobotAsset TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Se obtiene la ruta parcial del archivo config a través de un asset para que esta pueda ser modificable por el usuario en el futuro si se requiere." AssetName="RutaParcialConfig" DisplayName="Get Asset - Obtener la ruta del archivo config" sap:VirtualizedContainerService.HintSize="519.2,183.2" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
                                      <ui:GetRobotAsset.Value>
                                        <OutArgument x:TypeArguments="x:String">[RutaConfig]</OutArgument>
                                      </ui:GetRobotAsset.Value>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:GetRobotAsset>
                                    <ui:PathExists DisplayName="Path Exists" Exists="[ConfigFileExists]" sap:VirtualizedContainerService.HintSize="519.2,90.4" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[Environment.ExpandEnvironmentVariables(&quot;%UserProfile%\&quot;)+RutaConfig]" PathType="File" />
                                    <If Condition="[ConfigFileExists = False]" DisplayName="If Config file exists" sap:VirtualizedContainerService.HintSize="519.2,418.4" sap2010:WorkflowViewState.IdRef="If_12">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="375.2,268.8" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Throw DisplayName="Throw - Config does not exist" Exception="[new Exception(&quot;El archivo Config.xlsx no existe. Por favor coloque el archivo en la carpeta Base&quot;)]" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="Throw_1" />
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_39" UnSafe="False" WorkflowFileName="Logs_Generation.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_Msg">
                                                <Literal x:TypeArguments="x:String">Archivo Config no existe. No se puede continuar proceso. Ubicarlo en la carpeta Base</Literal>
                                              </InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_Proceso">
                                                <Literal x:TypeArguments="x:String">Inicialización</Literal>
                                              </InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_TipoLog">
                                                <Literal x:TypeArguments="x:String">Error</Literal>
                                              </InArgument>
                                              <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_LogsDT">
                                                <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="LogsDT" />
                                              </InOutArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FechaHoraInicioCorrida">
                                                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="FechaHoraInicioCorrida" />
                                              </InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                      </If.Then>
                                    </If>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings workflow" sap:VirtualizedContainerService.HintSize="519.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Environment.ExpandEnvironmentVariables(&quot;%UserProfile%\&quot;)+RutaConfig" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">
                                          <mva:VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="{}{&quot;Settings&quot;, &quot;Constants&quot;}" />
                                        </InArgument>
                                        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">
                                          <mva:VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Config" />
                                        </OutArgument>
                                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_logsDT">
                                          <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="LogsDT" />
                                        </InOutArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_fechaHoraInicioCorrida">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="FechaHoraInicioCorrida" />
                                        </InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:PathExists DisplayName="Path Exists - Archivos recibidos" Exists="[ArchivosRecibidosExist]" sap:VirtualizedContainerService.HintSize="519.2,90.4" sap2010:WorkflowViewState.IdRef="PathExists_2" Path="[String.Format(Config(&quot;RutaRaizAsset&quot;).ToString,Environment.UserName.ToString)+Config(&quot;IdBot&quot;).ToString + &quot;\&quot;+Config(&quot;RutaInAsset&quot;).ToString]" PathType="Folder" />
                                    <If Condition="[ArchivosRecibidosExist = False]" DisplayName="If Archivos Recibidos exist" sap:VirtualizedContainerService.HintSize="519.2,230.4" sap2010:WorkflowViewState.IdRef="If_13">
                                      <If.Then>
                                        <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[String.Format(Config(&quot;RutaRaizAsset&quot;).ToString,Environment.UserName.ToString)+Config(&quot;IdBot&quot;).ToString + &quot;\&quot;+Config(&quot;RutaInAsset&quot;).ToString]" />
                                      </If.Then>
                                    </If>
                                    <ui:PathExists DisplayName="Path Exists - Trazabilidad" Exists="[TrazabilidadFolderExist]" sap:VirtualizedContainerService.HintSize="519.2,90.4" sap2010:WorkflowViewState.IdRef="PathExists_3" Path="[String.Format(Config(&quot;RutaRaizAsset&quot;).ToString,Environment.UserName.ToString)+Config(&quot;IdBot&quot;).ToString + &quot;\&quot;+Config(&quot;RutaOutAsset&quot;).ToString]" PathType="Folder" />
                                    <If Condition="[TrazabilidadFolderExist = False]" sap:VirtualizedContainerService.HintSize="519.2,230.4" sap2010:WorkflowViewState.IdRef="If_14">
                                      <If.Then>
                                        <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder- Trazabilidad" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[String.Format(Config(&quot;RutaRaizAsset&quot;).ToString,Environment.UserName.ToString)+Config(&quot;IdBot&quot;).ToString + &quot;\&quot;+Config(&quot;RutaOutAsset&quot;).ToString]" />
                                      </If.Then>
                                    </If>
                                    <ui:PathExists DisplayName="Path Exists- Logs" Exists="[LogFolderExist]" sap:VirtualizedContainerService.HintSize="519.2,90.4" sap2010:WorkflowViewState.IdRef="PathExists_4" Path="[String.Format(Config(&quot;RutaRaizAsset&quot;).ToString,Environment.UserName.ToString)+Config(&quot;IdBot&quot;).ToString + &quot;\&quot;+Config(&quot;RutaLogAsset&quot;).ToString]" PathType="Folder" />
                                    <If Condition="[LogFolderExist = False]" sap:VirtualizedContainerService.HintSize="519.2,230.4" sap2010:WorkflowViewState.IdRef="If_15">
                                      <If.Then>
                                        <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder- Logs" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_3" Path="[String.Format(Config(&quot;RutaRaizAsset&quot;).ToString,Environment.UserName.ToString)+Config(&quot;IdBot&quot;).ToString + &quot;\&quot;+Config(&quot;RutaLogAsset&quot;).ToString]" />
                                      </If.Then>
                                    </If>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Kills all Windows processes representing applications used in this business process to assure that the execution starts in a clean state.&#xA;Since the applications are assumed to be already closed, CloseAllApplications is skipped and just KillAllProcess is invoked." DisplayName="Invoke KillAllProcesses workflow (first run)" sap:VirtualizedContainerService.HintSize="519.2,221.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                      </ui:InvokeWorkflowFile.Arguments>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InvokeWorkflowFile>
                                    <ui:AddLogFields sap2010:Annotation.AnnotationText="Add the process name to the logs generated after this point. &#xA;This log field can be used to create reports and visualizations about the process." DisplayName="Add Log Fields (BusinessProcessName)" sap:VirtualizedContainerService.HintSize="519.2,146.4" sap2010:WorkflowViewState.IdRef="AddLogFields_2">
                                      <ui:AddLogFields.Fields>
                                        <InArgument x:TypeArguments="x:String" x:Key="logF_BusinessProcessName">[Config("logF_BusinessProcessName").ToString]</InArgument>
                                      </ui:AddLogFields.Fields>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:AddLogFields>
                                  </Sequence>
                                </If.Then>
                              </If>
                              <Assign sap2010:Annotation.AnnotationText="Se crea la variable de tipo DataTable que almacenará los datos útiles que se extraigan de los archivos csv descargados con la información de las TRMs" DisplayName="Assign Datos extraídos DT" sap:VirtualizedContainerService.HintSize="704.8,136" sap2010:WorkflowViewState.IdRef="Assign_28">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="sd:DataTable">[TRMEuroDolarDT]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="sd:DataTable">[Nothing]</InArgument>
                                </Assign.Value>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Assign>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Este proceso tiene dos argumentos de salida. &#xA;TRM_DT: Almacena los datos extraidos de los documentos csv descargados.&#xA;ResultadosDT: Almacena una tabla con los encabezados sobre la cual se llenarán los datos procesados de la primera tabla (promedios, mayores y menores)." DisplayName="Invoke InitiAllApplications workflow" sap:VirtualizedContainerService.HintSize="704.8,237.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_41" UnSafe="False" WorkflowFileName="Framework\InitAllApplications.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                  <OutArgument x:TypeArguments="sd:DataTable" x:Key="Out_TRM_DT">[TRMEuroDolarDT]</OutArgument>
                                  <OutArgument x:TypeArguments="sd:DataTable" x:Key="Out_ResultadosDT">[ResultadosDT]</OutArgument>
                                  <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="Out_ResultadoProceso">[ResultadoProceso]</OutArgument>
                                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_logsDT">[LogsDT]</InOutArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_fechaHoraInicioCorrida">[FechaHoraInicioCorrida]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeWorkflowFile>
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="749.6,838.4" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                                </ActivityAction.Argument>
                                <Sequence sap:VirtualizedContainerService.HintSize="375.2,768" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap2010:Annotation.AnnotationText="Failures during the initialization are considered system exceptions and lead to the End Process state, thus finalizing the execution." DisplayName="Assign SystemException" sap:VirtualizedContainerService.HintSize="333.6,136" sap2010:WorkflowViewState.IdRef="Assign_21">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:Exception">[SystemException]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:Exception">[Exception]</InArgument>
                                    </Assign.Value>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Assign>
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Kills all Windows processes representing applications used in this business process to assure that the execution starts in a clean state.&#xA;Since the applications are assumed to be already closed, CloseAllApplications is skipped and just KillAllProcess is invoked." DisplayName="Invoke KillAllProcesses workflow (first run)" sap:VirtualizedContainerService.HintSize="333.6,221.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_42" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                    </ui:InvokeWorkflowFile.Arguments>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeWorkflowFile>
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Este proceso tiene dos argumentos de salida. &#xA;TRM_DT: Almacena los datos extraidos de los documentos csv descargados.&#xA;ResultadosDT: Almacena una tabla con los encabezados sobre la cual se llenarán los datos procesados de la primera tabla (promedios, mayores y menores)." DisplayName="Invoke InitiAllApplications workflow" sap:VirtualizedContainerService.HintSize="333.6,237.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_43" UnSafe="False" WorkflowFileName="Framework\InitAllApplications.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                      <OutArgument x:TypeArguments="sd:DataTable" x:Key="Out_TRM_DT">[TRMEuroDolarDT]</OutArgument>
                                      <OutArgument x:TypeArguments="sd:DataTable" x:Key="Out_ResultadosDT">[ResultadosDT]</OutArgument>
                                      <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="Out_ResultadoProceso">[ResultadoProceso]</OutArgument>
                                      <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_logsDT">[LogsDT]</InOutArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_fechaHoraInicioCorrida">[FechaHoraInicioCorrida]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </State.Entry>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">223,6.66666666666666</av:Point>
                          <av:Size x:Key="ShapeSize">253.6,121.6</av:Size>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Double x:Key="StateContainerWidth">220</x:Double>
                          <x:Double x:Key="StateContainerHeight">25</x:Double>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <State.Transitions>
                        <Transition DisplayName="Successful" sap:VirtualizedContainerService.HintSize="475.2,1034.4" sap2010:WorkflowViewState.IdRef="Transition_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
                              <av:PointCollection x:Key="ConnectorLocation">349.8,128.266666666667 349.8,158.266666666667 340,158.266666666667 340,252.8</av:PointCollection>
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <x:Reference>__ReferenceID0</x:Reference>
                          </Transition.To>
                          <Transition.Action>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" UnSafe="False" WorkflowFileName="Logs_Generation.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Msg">
                                  <Literal x:TypeArguments="x:String">Obteniendo transacciones y procesando datos</Literal>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Proceso">
                                  <Literal x:TypeArguments="x:String">Obtención y procesamiento de transacciones</Literal>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_TipoLog">
                                  <Literal x:TypeArguments="x:String">Rastro</Literal>
                                </InArgument>
                                <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_LogsDT">
                                  <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="LogsDT" />
                                </InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaHoraInicioCorrida">
                                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="FechaHoraInicioCorrida" />
                                </InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Transition.Action>
                          <Transition.Condition>
                            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="SystemException is Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
                          </Transition.Condition>
                        </Transition>
                        <Transition DisplayName="System Exception (failed initialization)" sap:VirtualizedContainerService.HintSize="475.2,1034.4" sap2010:WorkflowViewState.IdRef="Transition_3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">349.8,128.266666666667 349.8,158.266666666667 72.8,158.266666666667 72.8,212.8</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <State x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="Finalizar todos los procesos." DisplayName="End Process" sap:VirtualizedContainerService.HintSize="144,106.4" sap2010:WorkflowViewState.IdRef="State_1" IsFinal="True">
                              <State.Entry>
                                <TryCatch DisplayName="Try to close all aplications" sap:VirtualizedContainerService.HintSize="436.8,989.6" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                                  <TryCatch.Variables>
                                    <Variable x:TypeArguments="x:String" Name="ServidorCorreo" />
                                    <Variable x:TypeArguments="x:Int32" Name="PuertoCorreo" />
                                  </TryCatch.Variables>
                                  <TryCatch.Try>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="Framework\CloseAllApplications.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </TryCatch.Try>
                                  <TryCatch.Catches>
                                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,563.2" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ActivityAction x:TypeArguments="s:Exception">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Failed to close applications, so kill processes" sap:VirtualizedContainerService.HintSize="375.2,492.8" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:LogMessage DisplayName="Log message (Failed to close applications)" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_31" Level="Warn" Message="[&quot;Applications failed to close gracefully. &quot;+Exception.Message+&quot; at Source: &quot;+Exception.Source]" />
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_36" UnSafe="False" WorkflowFileName="Logs_Generation.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_Msg">
                                                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;Las aplicaciones fallaron al cerrar correctamente.&quot;+Exception.Message+&quot; at Source: &quot;+Exception.Source" />
                                              </InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_Proceso">
                                                <Literal x:TypeArguments="x:String">Finalización de proceso</Literal>
                                              </InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_TipoLog">
                                                <Literal x:TypeArguments="x:String">Advertencia</Literal>
                                              </InArgument>
                                              <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_LogsDT">
                                                <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="LogsDT" />
                                              </InOutArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FechaHoraInicioCorrida">
                                                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="FechaHoraInicioCorrida" />
                                              </InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow (End process)" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                      </ActivityAction>
                                    </Catch>
                                  </TryCatch.Catches>
                                </TryCatch>
                              </State.Entry>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">8,212.8</av:Point>
                                  <av:Size x:Key="ShapeSize">144,106.4</av:Size>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Double x:Key="StateContainerWidth">110</x:Double>
                                  <x:Double x:Key="StateContainerHeight">26</x:Double>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </State>
                          </Transition.To>
                          <Transition.Action>
                            <Sequence sap:VirtualizedContainerService.HintSize="375.2,339.2" sap2010:WorkflowViewState.IdRef="Sequence_37">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message (initialization failure)" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Fatal" Message="[&quot;System exception at initialization: &quot; + SystemException.Message + &quot; at Source: &quot; + SystemException.Source]" />
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_31" UnSafe="False" WorkflowFileName="Logs_Generation.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_Msg">
                                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;Excepción del sistema en la inicialización: &quot; + SystemException.Message + &quot;Fuente: &quot; + SystemException.Source" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_Proceso">
                                    <Literal x:TypeArguments="x:String">Inicialización</Literal>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_TipoLog">
                                    <Literal x:TypeArguments="x:String">Error</Literal>
                                  </InArgument>
                                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_LogsDT">
                                    <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="LogsDT" />
                                  </InOutArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_FechaHoraInicioCorrida">
                                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="FechaHoraInicioCorrida" />
                                  </InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </Sequence>
                          </Transition.Action>
                          <Transition.Condition>[SystemException isNot Nothing]</Transition.Condition>
                        </Transition>
                      </State.Transitions>
                    </State>
                  </Transition.To>
                </Transition>
                <Transition sap2010:Annotation.AnnotationText="Business Rule Exception" DisplayName="Business Exception" sap:VirtualizedContainerService.HintSize="448.8,542.4" sap2010:WorkflowViewState.IdRef="Transition_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">341.52,703.2 341.52,733.2 495.2,733.2 495.2,287.12 465.2,287.12</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">43</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">20</x:Int32>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID0</x:Reference>
                  </Transition.To>
                  <Transition.Condition>
                    <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="BusinessException IsNot Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_5" />
                  </Transition.Condition>
                </Transition>
                <Transition sap2010:Annotation.AnnotationText="There is no need for any action in case of successful transaction.&#xA;The process should simply go to next transaction." DisplayName="Success" sap:VirtualizedContainerService.HintSize="448.8,553.6" sap2010:WorkflowViewState.IdRef="Transition_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">387.6,703.2 387.6,722.88 495.2,722.88 495.2,332.88 465.2,332.88</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">59</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">52</x:Int32>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID0</x:Reference>
                  </Transition.To>
                  <Transition.Condition>
                    <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="SystemException Is Nothing And BusinessException is Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_6" />
                  </Transition.Condition>
                </Transition>
              </State.Transitions>
            </State>
          </Transition.To>
          <Transition.Action>
            <ui:LogMessage DisplayName="Log message (New transaction retrieved)" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_29" Level="Info" Message="[Config(&quot;LogMessage_GetTransactionData&quot;).ToString+(TransactionNumber+1).ToString]" />
          </Transition.Action>
          <Transition.Condition>
            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="CurrentTransactionRow IsNot Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
          </Transition.Condition>
        </Transition>
        <Transition sap2010:Annotation.AnnotationText="This is a simple mecanism to stop the process.&#xA;In reallife scenario you can stop the process when there is no more data to process or on a schedule." DisplayName="No Data" sap:VirtualizedContainerService.HintSize="475.2,1248" sap2010:WorkflowViewState.IdRef="Transition_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">340,367.2 340,397.2 80,397.2 80,319.2</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">39</x:Int32>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID1</x:Reference>
          </Transition.To>
          <Transition.Action>
            <Sequence sap:VirtualizedContainerService.HintSize="375.2,492.8" sap2010:WorkflowViewState.IdRef="Sequence_38">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log message (No more transations available)" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="Info" Message="[&quot;Process finished due to no more transaction data&quot;]" />
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_33" UnSafe="False" WorkflowFileName="Logs_Generation.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Msg">
                    <Literal x:TypeArguments="x:String">Proceso terminado debido a que no existen más transacciones</Literal>
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Proceso">
                    <Literal x:TypeArguments="x:String">Procesamiento de datos</Literal>
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_TipoLog">
                    <Literal x:TypeArguments="x:String">Información</Literal>
                  </InArgument>
                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_LogsDT">
                    <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="LogsDT" />
                  </InOutArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_FechaHoraInicioCorrida">
                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="FechaHoraInicioCorrida" />
                  </InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_40" UnSafe="False" WorkflowFileName="GenerarReporte.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_TransactionNumber">
                    <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="TransactionNumber" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:Double" x:Key="in_SumaPromDolarTotal">
                    <mva:VisualBasicValue x:TypeArguments="x:Double" ExpressionText="SumaPromDolarTotal" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:Double" x:Key="in_SumaPromEuroTotal">
                    <mva:VisualBasicValue x:TypeArguments="x:Double" ExpressionText="SumaPromEuroTotal" />
                  </InArgument>
                  <InArgument x:TypeArguments="sd:DataTable" x:Key="in_ResultadosDT">
                    <mva:VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="ResultadosDT" />
                  </InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                    <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Config" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:Double" x:Key="in_MenorEuro">
                    <mva:VisualBasicValue x:TypeArguments="x:Double" ExpressionText="MenorEuro" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:Double" x:Key="in_MenorDolar">
                    <mva:VisualBasicValue x:TypeArguments="x:Double" ExpressionText="MenorDolar" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:Double" x:Key="in_MayorEuro">
                    <mva:VisualBasicValue x:TypeArguments="x:Double" ExpressionText="MayorEuro" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:Double" x:Key="in_MayorDolar">
                    <mva:VisualBasicValue x:TypeArguments="x:Double" ExpressionText="MayorDolar" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_MesMenorDolar">
                    <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="MesMinDolar" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_MesMenorEuro">
                    <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="MesMinEuro" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_MesMayorDolar">
                    <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="MesMaxDolar" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_MesMayorEuro">
                    <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="MesMaxEuro" />
                  </InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:Int32, x:String)" x:Key="in_DiccionarioMeses">
                    <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:Int32, x:String)" ExpressionText="DiccionarioMeses" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_AñoAnterior">
                    <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="AñoAnterior" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:Double" x:Key="in_SumaPromDolar">
                    <mva:VisualBasicValue x:TypeArguments="x:Double" ExpressionText="SumaPromDolar" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:Double" x:Key="in_SumaPromEuro">
                    <mva:VisualBasicValue x:TypeArguments="x:Double" ExpressionText="SumaPromEuro" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_NumDatos">
                    <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="NumDatos" />
                  </InArgument>
                  <InArgument x:TypeArguments="sd:DataTable" x:Key="io_logsDT">
                    <mva:VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="LogsDT" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_fechaHoraInicioCorrida">
                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="FechaHoraInicioCorrida" />
                  </InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </Sequence>
          </Transition.Action>
          <Transition.Condition>[CurrentTransactionRow Is Nothing]</Transition.Condition>
        </Transition>
      </State.Transitions>
    </State>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="s:Exception" sap2010:Annotation.AnnotationText="Used during transitions between states to represent exceptions other than business exceptions." Name="SystemException" />
      <Variable x:TypeArguments="ui:BusinessRuleException" sap2010:Annotation.AnnotationText="Used during transitions between states and represents a situation that does not conform to the rules of the process being automated." Name="BusinessException" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Sequential counter of transaction items." Default="0" Name="TransactionNumber" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="Config" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Used to control the number of attempts of retrying the transaction processing in case of system exceptions." Default="0" Name="RetryNumber" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Optionally used to include additional information about the transaction item." Name="TransactionField2" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Optionally used to include additional information about the transaction item." Name="TransactionField1" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Transaction ID used for information and logging purposes. Ideally, the ID should be unique for each transaction. " Name="TransactionID" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="DataTable con todos los datos de insumo de TRM del Dolar y del Euro para la etapa de GetTransactionData" Name="TRMEuroDolarDT" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Año correspondiente a la fila que se está procesando." Name="AñoActual" />
      <Variable x:TypeArguments="x:Double" sap2010:Annotation.AnnotationText="TRM del Euro correspondiente a la fila que se está procesando" Name="TRMEuroActual" />
      <Variable x:TypeArguments="x:Double" sap2010:Annotation.AnnotationText="TRM del Dolar correspondiente a la fila que se está procesando" Name="TRMDolarActual" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Mes correspondiente a la fila que se está procesando" Name="FechaTRMActual" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Variable donde se almacena el dato del año que se está analizando. Esta variable se compara con AñoActual para detectar cambios de año." Default="0" Name="AñoAnterior" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Contador de la cantidad de días del año para calcular el promedio." Default="0" Name="NumDatos" />
      <Variable x:TypeArguments="x:Double" sap2010:Annotation.AnnotationText="Contador que suma los TRM de dolar para un año (variable auxiliar)" Default="0" Name="SumaPromDolar" />
      <Variable x:TypeArguments="x:Double" sap2010:Annotation.AnnotationText="Contador que suma los TRM de Euro para un año (variable auxiliar)" Default="0" Name="SumaPromEuro" />
      <Variable x:TypeArguments="x:Double" sap2010:Annotation.AnnotationText="Variable que almacena el TRM menor de Euro para un año (variable auxiliar)" Default="0" Name="MenorEuro" />
      <Variable x:TypeArguments="x:Double" sap2010:Annotation.AnnotationText="Variable que almacena el TRM mayor de Euro para un año (variable auxiliar)" Name="MayorEuro" />
      <Variable x:TypeArguments="x:Double" sap2010:Annotation.AnnotationText="Variable que almacena el TRM menor de Dolar para un año (variable auxiliar)" Default="0" Name="MenorDolar" />
      <Variable x:TypeArguments="x:Double" sap2010:Annotation.AnnotationText="Variable que almacena el TRM mayor de Dolar para un año (variable auxiliar)" Default="0" Name="MayorDolar" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Variable que almacena el mes correspondiente a la TRM menor de Dolar para un año (variable auxiliar)" Default="0" Name="MesMinDolar" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Variable que almacena el mes correspondiente a la TRM menor de Euro para un año (variable auxiliar)" Default="0" Name="MesMinEuro" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Variable que almacena el mes correspondiente a la TRM mayor de Dolar para un año (variable auxiliar)" Default="0" Name="MesMaxDolar" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Variable que almacena el mes correspondiente a la TRM mayor de Euro para un año (variable auxiliar)" Default="0" Name="MesMaxEuro" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="DataTable para almacenar los resultados finales que se colocarán en el informe." Name="ResultadosDT" />
      <Variable x:TypeArguments="x:Double" sap2010:Annotation.AnnotationText="Variable que almacena la suma de la TRM de Dolar para todos los años a analizar." Default="0" Name="SumaPromDolarTotal" />
      <Variable x:TypeArguments="x:Double" sap2010:Annotation.AnnotationText="Variable que almacena la suma de la TRM de Euro para todos los años a analizar." Default="0" Name="SumaPromEuroTotal" />
      <Variable x:TypeArguments="sd:DataRow" sap2010:Annotation.AnnotationText="Fila a procesar del DataTable que contiene los datos extraídos de los archivos CSV descargados de la pag de BanRep" Name="CurrentTransactionRow" />
      <Variable x:TypeArguments="scg:Dictionary(x:Int32, x:String)" sap2010:Annotation.AnnotationText="Diccionario que tiene una relación entre número y meses. Es utilizado para generar el informe." Default="[New Dictionary(of integer, String) From { {1,&quot;Enero&quot;}, {2,&quot;Febrero&quot;}, {3,&quot;Marzo&quot;}, {4,&quot;Abril&quot;},{5,&quot;Mayo&quot;}, {6,&quot;Junio&quot;}, {7,&quot;Julio&quot;},{8,&quot;Agosto&quot;},{9,&quot;Septiembre&quot;},{10,&quot;Octubre&quot;},{11,&quot;Noviembre&quot;},{12,&quot;Diciembre&quot;}}]" Name="DiccionarioMeses" />
      <Variable x:TypeArguments="scg:List(x:String)" sap2010:Annotation.AnnotationText="Variable para verificar que el proceso de inicialización de aplicaciones fue exitoso." Name="ResultadoProceso" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="DataTable con información de los logs para una corrida" Name="LogsDT" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Parámetro para identificar cada corrida en el archivo de logs" Name="FechaHoraInicioCorrida" />
    </StateMachine.Variables>
  </StateMachine>
</Activity>